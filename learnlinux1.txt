绝对路径： cd /home/python/Downloads
相对路径： cd Downloads

.     表示 当前路径
..    表示 当前路径的上一层
../.. 表示 当前路径上一层的上一层


##  linux命令————文件、磁盘管理

ls --help: 查看帮助文档
man ls: 查看手册 包括绝大部分命令、函数的使用说明
man 2 printf: System calls（系统调用，如open,write）
man 3 printf: Library functions（库函数，如printf,fopen）
history: 查看所有历史命令 显示行数

ls： 
   ls           查看当前路径下的文件以及文件夹的名字
   ls /bin      表示：查看根目录下的bin文件夹的东西
   ls Documents 表示： 查看当前路径下的Documents文件夹下的东西
   ls -a        显示指定目录下所有子目录与文件，包括隐藏文件 （隐藏文件通常以.开头 如.mozilla）
   ls -l        以列表方式显示文件的详细信息
   ls -l -h     配合 -l 以人性化的方式显示文件大小
   ls -alh      不分先后顺序
   ls *	        文件代表文件名中所有字符,任意多个字符，也可以没有  如： ls *.txt
   ls ?         表示一个任意字符 必须有一个
   ls []        [ ]将字符组括起来，表示可以匹配字符组中的任意一个
   ls []        [a-f]	匹配从a到f范围内的的任意一个字符 相当于[abcdef]
   ls \         使用转义字符就失去通配符的作用 如ls \*a	查找文件名为*a的文件
   ls >         Linux允许将命令执行结果重定向到一个文件，本应显示在终端上的内容保存到指定文件中
                如：ls > test.txt ( test.txt 如果不存在，则创建，存在则覆盖其内容 )
   ls >>        >输出重定向会覆盖原来的内容，>>输出重定向则会追加到文件的尾部
   ls --help    查看帮助信息


cd :
  cd Desktop    进入到Desktop这个文件夹
  cd            文件夹的名字
  cd ..         跳转到当前路径的上一层
  cd /bin       直接进入bin目录 
  cd -          进入上一次操作所在的路径 （类似于遥控器中的回看）
  cd ~	        切换到当前用户的主目录(/home/用户目录)

pwd: 显示当前操作的路径（绝对路径 /aaa/bb/cc，/home/python/dbs）

clear: 清屏

tab键: 自动补全

touch: 创建文件 如touch hello.txt

more: 查看内容时，每次只显示一页，按下空格键可以显示下一页，按下q键退出显示，按下h键可以获取帮助

|: 管道：一个命令的输出可以通过管道做为另一个命令的输入 如：ls -alh | more 将前面的结果分页显示，用于结果太长的时候

mkdir: 创建一个新的文件夹
	mkdir a 在当前路径下创建a文件夹
	mkdir A/B/C -p 在当前路径下递归创建文件夹

tree: 以目录树的方式显示文件结构

rmdir: 删除文件夹, 并且目录必须为空目录

rm: 删除文件或目录。使用rm命令要小心，因为文件删除后不能恢复
	-i	以进行交互式方式执行
	-f	强制删除，忽略不存在的文件，无需提示 （可以删除不存在的文件，force的首字母)
	-r	递归地删除目录下的内容，删除文件夹时必须加此参数

ln：链接文件 共同点：对源文件或者链接文件修改 对应的另一个也会做出相应的修改
	ln 源文件 链接文件 硬链接只能链接普通文件，不能链接目录 硬链接相当于几个文件名公用同一个文件内容 文件拥有多个名字数量
	                   删除其中任意一个文件名不会对别的文件名产生影响
	ln -s 源文件 链接文件 软链接不占用磁盘空间，直接指向的是文件名 源文件删除则软链接失效 文件只拥有一个名字

gedit： 修改、编辑文件内容

cat: 查看或合并文件内容
	cat 当前路径 如：cat hh_hardlink.txt
	cat 绝对路径 如：cat /home/python/hh_hardlink.txt
	cat test1.txt test2.txt > test.txt 把两个文件的内容合并到test.txt文件中 先清空 后添加
	cat test1.txt test2.txt >> test.txt 把两个文件的内容追加到test.txt文件中 直接添加

grep：文本搜索 从文件中找内容
	grep [-选项] ‘搜索内容串’ 文件名
	-v	显示不包含匹配文本的所有行（相当于求反）
	-n	显示匹配行及行号
	-i	忽略大小写

	^a	行首,搜寻以 m 开头的行；grep -n '^a' 1.txt
	ke$	行尾,搜寻以 ke 结束的行；grep -n 'ke$' 1.txt
	[Ss]igna[Ll]	匹配 [] 里中一系列字符中的一个；搜寻匹配单词signal、signaL、Signal、SignaL的行；
	                grep -n '[Ss]igna[Ll]' 1.txt
	.	(点)匹配一个非换行符的字符；匹配 e 和 e 之间有任意一个字符，可以匹配 eee，eae，eve，但是不匹配 ee，eaae；
	   grep -n 'e.e' 1.txt

find: 查找文件 在特定的目录中搜索符合条件的文件 搜索特定用户属主的文件
	find ./ -name test.sh	查找当前目录下所有名为test.sh的文件
	find ./ -name '*.sh'	查找当前目录下所有后缀为.sh的文件
	find ./ -name "[A-Z]*"	查找当前目录下所有以大写字母开头的文件
	find /tmp -size 2M	查找在/tmp 目录下等于2M的文件
	find /tmp -size +2M	查找在/tmp 目录下大于2M的文件
	find /tmp -size -2M	查找在/tmp 目录下小于2M的文件
	find ./ -size +4k -size -5M	查找当前目录下大于4k，小于5M的文件
	find ./ -perm 0777	查找当前目录下权限为 777 的文件或目录

cp： 拷贝文件 将给出的文件或目录复制到另一个文件或目录中
	cp 旧文件 新文件 如：cp test1.txt test2.txt 复制test1.txt到新文件test2.txt
	cp a b 将a文件夹整体复制到b文件夹下
	cp a/* b 将a文件夹下的所有内容复制到b文件夹下
	-a	该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性
	-f	已经存在的目标文件而不提示
	-i	交互式复制，在覆盖目标文件之前将给出提示要求用户确认
	-r	若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名。
	-v	显示拷贝进度

mv: 移动文件 剪切 重命名
	-f	禁止交互式操作，如有覆盖也不会给出提示
	-i	确认交互方式操作，如果mv操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件
	-v	显示移动进度
	mv d/c . 把d中的c移动到当前路径
	mv d.txt c.txt 把d.txt文件名修改为c.txt

tar: 归档管理 打包文件
	tar -cvf Test.tar * 把当前所有文件打包生成Test.tar放在当前路径下
	tar -xvf Test.tar 解包 解压出的文件放在当前文件夹中
	tar -zcvf Test.tar.gz * 把当前所有文件打包并压缩 
	tar -zxvf Test.tar.gz 解压缩并解包 
	tar -zxvf Test.tar.gz -C dongge/ 解压缩并解包到指定路径
	tar -jcvf xxx.tar.bz2 * 把当前所有文件打包并压缩 
	tar -jxvf xxx.tar.bz2 解压缩并解包 
	tar -jxvf xxx.tar.bz2 -C dongge/ 解压缩并解包到指定路径

gzip: 压缩与解压
	tar与gzip命令结合使用实现文件打包、压缩
	tar只负责打包文件，但不压缩；用gzip压缩tar打包后的文件，其扩展名一般用xxxx.tar.gz
	gzip xxx.tar 压缩
	gzip -d xxx.tar.gz 解压缩

zip unzip:
	zip 目标文件 源文件 zip myzip * 压缩所有文件到myzip文件中
	unzip -d 目录文件 源文件 unzip -d ./test myzip.zip 解压缩到test文件夹

which: 查看命令文件
	which ls 返回 /bin/ls 显示ls命令的路径 一般情况下 路径为/bin 或者/user/bin
	


##  linux命令————用户、权限管理

linux 是多用户多任务的操作系统（Operation System)
ifconfig： 查看ip地址

ping: 测试远程主机连通性
	ping 192.168.17.76 测试网络连接是否正常

ssh： 远程登录
	ssh python@192.168.17.76
	ssh 用户名@ip

whoami: 查看当前用户

who: 查看登录用户信息
	who -q 只显示用户的登录账号和登录用户的数量
	who -u 显示列标题

exit: 退出当前登录

useradd: 添加用户账号
	useradd fengyiwen -m -d /home/fengyiwen 报错：Permisson denied 无权限 在命令前加上sudo
	sudo useradd fengyiwen -m -d /home/fengyiwen 提示输入密码 成功
	-m	自动建立目录
	-d	指定用户登录系统时的主目录

passwd: 设定与修改密码
	sudo passwd fengyiwen

su: 切换用户
	su fengyiwen 切换用户 提示输入密码 
	su - fengyiwen 
	su 普通用户	切换到普通用户 留在当前路径
	su - 普通用户切换到普通用户，同时跳转到普通用户所在的家目录

sudo: 当需要超级管理员权限时需要添加(报错：Permisson denied 无权限 )，且在命令行最前面，后面需要加空格
	sudo -s  直接切换到root用户


userdel: 删除用户
	userdel abc(用户名)	删除abc用户，但不会自动删除用户的主目录（更常用，因为开发的信息可能会需要使用）
	userdel -r abc(用户名)	删除用户，同时删除用户的主目录

用户组： 在该用户组中的人有对应的权限
查看用户组：
	1. cat /etc/group
	2. groupmod 再按三次tab键

groupadd: 创建用户组 
	groupadd 用户组名 如:groupadd lalala 

groupdel: 删除用户组
	groupdel 用户组名 如：groupdel lalala

usermod: 修改或添加用户所在组
	usermod -g 用户组 用户名： 修改用户所在默认组  usermod -g lalala fengyiwen
	usermod -a -G 用户组 用户名： 添加用户所在组 

为创建的普通用户添加sudo权限
	sudo usermod -a -G adm 用户名
	sudo usermod -a -G sudo 用户名

groups: 查看用户在哪些组
	groups fengyiwen 

chmod: 更改文件权限
	chmod 修改文件权限有两种使用格式：字母法与数字法
	字母法：chmod u/g/o/a +/-/= rwx 文件
			u	user 拥有者
			g	group 用户组
			o	other 表示其他以外的人
			a	all 表示这三者皆是
			+	增加权限
			-	撤销权限
			=	设定权限
			r	read 表示可读取，对于一个目录，如果没有r权限，那么就意味着不能通过ls查看这个目录的内容。
			w	write 表示可写入，对于一个目录，如果没有w权限，那么就意味着不能在目录下创建新的文件。
			x	excute 表示可执行，对于一个目录，如果没有x权限，那么就意味着不能通过cd进入这个目录。
			chmod g+w 1.txt 添加同组者人的权限 可以写入
			chmod u=rw, g=r, o= 1.txt 拥有者可读可写 同组者可读 其他人没有任何权限

	数字法：“rwx” 这些权限也可以用数字来代替 (更方便)
			r	读取权限，数字代号为 "4"
			w	写入权限，数字代号为 "2"
			x	执行权限，数字代号为 "1"
			-	不具任何权限，数字代号为 "0"
			chmod 761 a.txt 拥有者rwx 同组者rw 其他人x

	chmod 777 文件夹     ：只修改文件夹的权限 不修改文件里面内容的权限
	chmod 777 文件夹 -R  ：会修改文件夹与文件夹里面所有内容的权限（递归修改）

chown: 修改文件所有者
	chown 用户名 文件名 如：chown fengyiwen 1.txt

chgrp: 修改文件所属组	
	chgrp 组名 文件名 如：chgrp lalala 2.txt



##  linux命令————系统管理

cal: cal命令用于查看当前日历，-y显示整年日历
	cal 
	cal -y

date：显示或设置时间
	date [MMDDhhmm[[CC]YY][.ss]] +format 
	CC为年前两位yy为年的后两位，前两位的mm为月，后两位的mm为分钟，dd为天，hh为小时，ss为秒
	如： date 010203042016.55
	显示时间格式（date '+%y,%m,%d,%H,%M,%S'）	date '+%y-%m-%d' 2018-04-29
	format格式	含义
	%Y，%y	年
	%m	月
	%d	日
	%H	时
	%M	分
	%S	秒

ps: 查看进程信息 类似windows下的任务管理器
	ps       :常用
	ps -aux  :常用

top: 动态显示运行中的进程
	M	根据内存使用量来排序 (memory)
	P	根据CPU占有率来排序
	T	根据进程运行时间的长短来排序 (time)
	U	可以根据后面输入的用户名来筛选进程 (user)
	K	可以根据后面输入的PID来杀死进程。
	q	退出
	h	获得帮助

kill： 终止进程 配合 ps 使用
	kill pid
	kill -9 pid
	
关机与重启
	reboot	重新启动操作系统
	shutdown –r now	重新启动操作系统，shutdown会给别的用户提示
	shutdown -h now	立刻关机，其中now相当于时间为0的状态
	shutdown -h 20:25	系统在今天的20:25 会关机
	shutdown -h +10	系统再过十分钟后自动关机
	init 0	关机
	init 6	重启

df： 命令用于检测文件系统的磁盘空间占用和空余情况，可以显示所有文件系统对节点和磁盘块的使用情况
	-a	显示所有文件系统的磁盘使用情况
	-m	以1024字节为单位显示

ifconfig： 查看或配置网卡信息
	sudo ifconfig ens33 down 把网卡关闭
	sudo ifconfig ens33 up   把网卡开启
	sudo ifconfig ens33 162.15.27.123 修改网卡


sublime编辑器：
ctrl + shift + d 复制并粘贴
ctrl + l 选中整行

vi编辑器：
1. 命令模式
2. 编辑模式： i 从命令跳转到编辑 插入在光标左边
              I 从命令跳转到编辑 插入在光标行首
              o 从命令跳转到编辑 插入在光标下一行
              O 从命令跳转到编辑 插入在光标上一行
              a 从命令跳转到编辑 插入在光标右边
              A 从命令跳转到编辑 插入在光标行末
3. 末行模式： :wq 保存并退出 等价于:x
              :q! 不保存退出

从命令到编辑 i/o/a/I/O/A
从编辑到命令 esc


vim编辑器：
	移动光标:
		ctrl + n: 自动补全
		h: 左移 
		j: 下移 
		k: 上移 
		l: 右移
		M: 光标移动到中间行 
		L: 光标移动到屏幕最后一行行首 
		yy: 复制当前行, n yy 复制n行 
		dd: 剪切当前行，n dd 剪切n行
		p: 在光标所在位置向下新开辟一行,粘贴
		u: 一步一步撤销 
		Ctrl + r: 反撤销
		G：调到最后一行
		n G: 跳转到第n行
		gg: 跳转到第一行
		w: 向后一次移动一个字（word)
		b: 向前一次移动一个字 (word)
                {: 按段移动, 上移 
                }: 按段移动, 下移 
                Ctr-d: 向下翻半屏 
                Ctr-u: 向上翻半屏
                Ctr-f: 向下翻一屏 
                Ctr-b: 向上翻一屏

       删除命令：
	    x: 删除光标后一个字符,相当于 Del 
	    X: 删除光标前一个字符,相当于 Backspace
	    dd: 删除光标所在行
	    n dd： 删除指定的行数 
	    D: 删除光标后本行所有内容,包含光标所在字符 
	    d0: 删除光标前本行所有内容,不包含光标所在字符
	    dw: 删除光标开始位置的字,包含光标所在字符
    
    
        撤销命令:
		u: 一步一步撤销 
		Ctr-r: 反撤销

        重复命令:
		.: 重复上一次操作的命令

	文本行移动:
		>>: 文本行右移 
		<<: 文本行左移

	复制粘贴:
		yy: 复制当前行,n yy 复制 n 行 
		p: 在光标所在位置向下新开辟一行,粘贴

	直接在程序中跳转到某一行：
	例如： vim 1.py +22 直接跳转到1.py中的第22行

	可视模式:
		v: 按字符移动,选中文本 
		V: 按行移动,选中文本可视模式可以配合 d, y, >>, << 实现对文本块的删除,复制,左右移动

	替换操作:
		r: 替换当前字符 
		R: 替换当前行光标后的字符

	查找命令:
		/: str查找 在命令模式输入 /lalala 找lalala
		n: 下一个
		N：上一个

	替换命令：
		把abc全部替换成123
		末行模式下，将光标所在行的abc替换成123
		:%s/abc/123/g
		末行模式下，将第一行至第10行之间的abc替换成123
		:1, 10s/abc/123/g

	vim里执行 shell 下命令:
		末行模式里输入!,后面跟命令