绝对路径： cd /home/python/Downloads
相对路径： cd Downloads

.     表示 当前路径
..    表示 当前路径的上一层
../.. 表示 当前路径上一层的上一层

ls --help: 查看帮助文档
man ls: 查看手册 包括绝大部分命令、函数的使用说明
man 2 printf: System calls（系统调用，如open,write）
man 3 printf: Library functions（库函数，如printf,fopen）
history: 查看所有历史命令 显示行数

ls： 
   ls           查看当前路径下的文件以及文件夹的名字
   ls /bin      表示：查看根目录下的bin文件夹的东西
   ls Documents 表示： 查看当前路径下的Documents文件夹下的东西
   ls -a        显示指定目录下所有子目录与文件，包括隐藏文件 （隐藏文件通常以.开头 如.mozilla）
   ls -l        以列表方式显示文件的详细信息
   ls -l -h     配合 -l 以人性化的方式显示文件大小
   ls -alh      不分先后顺序
   ls *	        文件代表文件名中所有字符,任意多个字符，也可以没有  如： ls *.txt
   ls ?         表示一个任意字符 必须有一个
   ls []        [ ]将字符组括起来，表示可以匹配字符组中的任意一个
   ls []        [a-f]	匹配从a到f范围内的的任意一个字符 相当于[abcdef]
   ls \         使用转义字符就失去通配符的作用 如ls \*a	查找文件名为*a的文件
   ls >         Linux允许将命令执行结果重定向到一个文件，本应显示在终端上的内容保存到指定文件中
                如：ls > test.txt ( test.txt 如果不存在，则创建，存在则覆盖其内容 )
   ls >>        >输出重定向会覆盖原来的内容，>>输出重定向则会追加到文件的尾部
   ls --help    查看帮助信息


cd :
  cd Desktop    进入到Desktop这个文件夹
  cd            文件夹的名字
  cd ..         跳转到当前路径的上一层
  cd /bin       直接进入bin目录 
  cd -          进入上一次操作所在的路径 （类似于遥控器中的回看）
  cd ~	        切换到当前用户的主目录(/home/用户目录)

pwd: 显示当前操作的路径（绝对路径 /aaa/bb/cc，/home/python/dbs）

clear: 清屏

tab键: 自动补全

touch: 创建文件 如touch hello.txt

more: 查看内容时，每次只显示一页，按下空格键可以显示下一页，按下q键退出显示，按下h键可以获取帮助

|: 管道：一个命令的输出可以通过管道做为另一个命令的输入 如：ls -alh | more 将前面的结果分页显示，用于结果太长的时候

mkdir: 创建一个新的文件夹
	mkdir a 在当前路径下创建a文件夹
	mkdir A/B/C -p 在当前路径下递归创建文件夹

tree: 以目录树的方式显示文件结构

rmdir: 删除文件夹, 并且目录必须为空目录

rm: 删除文件或目录。使用rm命令要小心，因为文件删除后不能恢复
	-i	以进行交互式方式执行
	-f	强制删除，忽略不存在的文件，无需提示 （可以删除不存在的文件，force的首字母)
	-r	递归地删除目录下的内容，删除文件夹时必须加此参数

ln：链接文件 共同点：对源文件或者链接文件修改 对应的另一个也会做出相应的修改
	ln 源文件 链接文件 硬链接只能链接普通文件，不能链接目录 硬链接相当于几个文件名公用同一个文件内容 文件拥有多个名字数量
	                   删除其中任意一个文件名不会对别的文件名产生影响
	ln -s 源文件 链接文件 软链接不占用磁盘空间，直接指向的是文件名 源文件删除则软链接失效 文件只拥有一个名字

gedit： 修改、编辑文件内容

cat: 查看或合并文件内容
	cat 当前路径 如：cat hh_hardlink.txt
	cat 绝对路径 如：cat /home/python/hh_hardlink.txt
	cat test1.txt test2.txt > test.txt 把两个文件的内容合并到test.txt文件中 先清空 后添加
	cat test1.txt test2.txt >> test.txt 把两个文件的内容追加到test.txt文件中 直接添加

grep：文本搜索 从文件中找内容
	grep [-选项] ‘搜索内容串’ 文件名
	-v	显示不包含匹配文本的所有行（相当于求反）
	-n	显示匹配行及行号
	-i	忽略大小写

	^a	行首,搜寻以 m 开头的行；grep -n '^a' 1.txt
	ke$	行尾,搜寻以 ke 结束的行；grep -n 'ke$' 1.txt
	[Ss]igna[Ll]	匹配 [] 里中一系列字符中的一个；搜寻匹配单词signal、signaL、Signal、SignaL的行；
	                grep -n '[Ss]igna[Ll]' 1.txt
	.	(点)匹配一个非换行符的字符；匹配 e 和 e 之间有任意一个字符，可以匹配 eee，eae，eve，但是不匹配 ee，eaae；
	   grep -n 'e.e' 1.txt

find: 查找文件 在特定的目录中搜索符合条件的文件 搜索特定用户属主的文件
	find ./ -name test.sh	查找当前目录下所有名为test.sh的文件
	find ./ -name '*.sh'	查找当前目录下所有后缀为.sh的文件
	find ./ -name "[A-Z]*"	查找当前目录下所有以大写字母开头的文件
	find /tmp -size 2M	查找在/tmp 目录下等于2M的文件
	find /tmp -size +2M	查找在/tmp 目录下大于2M的文件
	find /tmp -size -2M	查找在/tmp 目录下小于2M的文件
	find ./ -size +4k -size -5M	查找当前目录下大于4k，小于5M的文件
	find ./ -perm 0777	查找当前目录下权限为 777 的文件或目录

cp： 拷贝文件 将给出的文件或目录复制到另一个文件或目录中
	cp 旧文件 新文件 如：cp test1.txt test2.txt 复制test1.txt到新文件test2.txt
	cp a b 将a文件夹整体复制到b文件夹下
	cp a/* b 将a文件夹下的所有内容复制到b文件夹下
	-a	该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性
	-f	已经存在的目标文件而不提示
	-i	交互式复制，在覆盖目标文件之前将给出提示要求用户确认
	-r	若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名。
	-v	显示拷贝进度

mv: 移动文件 剪切 重命名
	-f	禁止交互式操作，如有覆盖也不会给出提示
	-i	确认交互方式操作，如果mv操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件
	-v	显示移动进度
	mv d/c . 把d中的c移动到当前路径
	mv d.txt c.txt 把d.txt文件名修改为c.txt

tar: 归档管理 打包文件
	tar -cvf Test.tar * 把当前所有文件打包生成Test.tar放在当前路径下
	tar -xvf Test.tar 解包 解压出的文件放在当前文件夹中
	tar -zcvf Test.tar.gz * 把当前所有文件打包并压缩 
	tar -zxvf Test.tar.gz 解压缩并解包 
	tar -zxvf Test.tar.gz -C dongge/ 解压缩并解包到指定路径
	tar -jcvf xxx.tar.bz2 * 把当前所有文件打包并压缩 
	tar -jxvf xxx.tar.bz2 解压缩并解包 
	tar -jxvf xxx.tar.bz2 -C dongge/ 解压缩并解包到指定路径

gzip: 压缩与解压
	tar与gzip命令结合使用实现文件打包、压缩
	tar只负责打包文件，但不压缩；用gzip压缩tar打包后的文件，其扩展名一般用xxxx.tar.gz
	gzip xxx.tar 压缩
	gzip -d xxx.tar.gz 解压缩

zip unzip:
	zip 目标文件 源文件 zip myzip * 压缩所有文件到myzip文件中
	unzip -d 目录文件 源文件 unzip -d ./test myzip.zip 解压缩到test文件夹

which: 查看命令文件
	which ls 返回 /bin/ls 显示ls命令的路径 一般情况下 路径为/bin 或者/user/bin
	

